
package ro.sci.DBTests;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import ro.sci.DBTests.DbContract;
import ro.sci.DBTests.PostgresHelper;

public class Main {
	private PostgresHelper client;

	public static void main(String[] args) throws SQLException {
//se conecteaza la DB
		PostgresHelper client = new PostgresHelper(DbContract.HOST, DbContract.DB_NAME, DbContract.USERNAME,
				DbContract.PASSWORD);

		try {
			if (client.connect()) {
				System.out.println("DB connected");
			}
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		}
// afiseaza baza de date
		ResultSet rs = client.execQuery("SELECT * FROM accomodation");
		System.out.println("Accomodation");
		while (rs.next()) {
			System.out.printf("%d\t%s\t%s\t%d\t%s\n", rs.getInt(1), rs.getString(2), rs.getString(3), rs.getInt(4),
					rs.getString(5));
		}
		ResultSet rs = client.execQuery("SELECT * FROM room-fair");
		System.out.println("Room-fair");
		while (rs.next()) {
			System.out.printf("%d\t%s\t%s\t%s\n", rs.getInt(1), rs.getInt(4),rs.getString(5));
		}
	}
	// insereaza in db

	protected void insertQueryAccomodation(int id, String type, String bedType, int maxGuests, String description) {
		try {
			Class.forName("org.postgresql.Driver").newInstance();
		} catch (InstantiationException | IllegalAccessException | ClassNotFoundException e) {
			e.printStackTrace();
		}

		Connection conn = null;
		try {
			conn = DriverManager.getConnection(DbContract.HOST + DbContract.DB_NAME, DbContract.USERNAME,
					DbContract.PASSWORD);
		} catch (SQLException e1) {
			// TODO Auto-generated catch block
			e1.printStackTrace();
		}

		System.out.println("DB connected");

		if (conn == null)
			return;
		Statement st = null;
		PreparedStatement ps = null;

		try {
			String sqlQuery = "INSERT INTO PUBLIC.ACCOMODATION (ID,TYPE,BED_TYPE,MAX_GUESTS,DESCRIPTION) VALUES (?, ?, ?, ?, ?);";
			ps = conn.prepareStatement(sqlQuery);
			ps.setInt(1, id);
			ps.setString(2, type);
			ps.setString(3, bedType);
			ps.setInt(4, maxGuests);
			ps.setString(5, description);
			ps.executeUpdate();

		} catch (SQLException e) {
			System.err.println("Cannot execute update: " + e.getMessage());
		} finally {
			if (st != null)
				try {
					st.close();
				} catch (SQLException e) {
				}
			try {
				conn.close();
			} catch (SQLException e) {
			}
		}

	}
}
