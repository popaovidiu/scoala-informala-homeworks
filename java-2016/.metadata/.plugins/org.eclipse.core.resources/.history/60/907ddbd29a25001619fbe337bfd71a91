
package ro.sci.DBTests;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;

import ro.sci.DBTests.DbContract;
import ro.sci.DBTests.PostgresHelper;

public class Main {
	private PostgresHelper client;

	public static void main(String[] args) throws SQLException {
//se conecteaza la DB
		PostgresHelper client = new PostgresHelper(DbContract.HOST, DbContract.DB_NAME, DbContract.USERNAME,
				DbContract.PASSWORD);

		try {
			if (client.connect()) {
				System.out.println("DB connected");
			}
		} catch (ClassNotFoundException | SQLException e) {
			e.printStackTrace();
		}
// afiseaza baza de date
		ResultSet rsAccomodations = client.execQuery("SELECT id, type, bed_type, max_guests, description FROM public.accomodation;");
		System.out.println("Accomodation");
		while (rsAccomodations.next()) {
			System.out.printf("%d\t%s\t%s\t%d\t%s\n", rsAccomodations.getInt(1),
					rsAccomodations.getString(2), rsAccomodations.getString(3), 
					rsAccomodations.getInt(4), rsAccomodations.getString(5));
		}
		
		ResultSet rsRoomFair = client.execQuery("SELECT id, value, season FROM public.room_fair;");
		System.out.println("Room_fair");
		while (rsRoomFair.next()) {
			System.out.printf("%d\t%f\t%s\n", rsRoomFair.getInt(1), rsRoomFair.getDouble(2),rsRoomFair.getString(3));
		}
	}
	// insereaza in db
	
		PreparedStatement statment1 = null;
		PreparedStatement statment2 = null;
		PreparedStatement statment3 = null;

		System.out.println("aici");
		try {

			// insert values to first table - accommodation

			statment1 = conn.prepareStatement(
					"insert into accomodation(id,type,bed_type,max_quests,description) values(?,?,?,?,?) ");
			statment1.setInt(1, 3);
			statment1.setString(2, "single");
			statment1.setString(3, "single");
			statment1.setFloat(4, 1);
			statment1.setString(5, "cu cabina dus");

			statment1.executeUpdate();

			// insert values to second table - room_fair

			statment2 = conn.prepareStatement("insert into room_fair(id,value,season) values(?,?,?) ");
			statment2.setInt(1, 3);
			statment2.setFloat(2, 100);
			statment2.setString(3, "low");

			statment2.executeUpdate();

			// insert values to the third table - accomodation_fair_relation

			statment3 = conn.prepareStatement(
					"insert into accomodation_fair_relation(id,id_accomodation,id_room_fair) values(?,?,?) ");
			statment3.setInt(1, 3);
			statment3.setInt(2, 3);
			statment3.setInt(3, 3);

			statment3.executeUpdate();

		} catch (SQLException e) {
			System.err.println(" Cannot insert something " + e.getMessage());

		} finally {

			if (statment1 != null || statment2 != null || statment3 != null)
				try {
					statment1.close();
					statment2.close();
					statment3.close();
				} catch (SQLException e) {
				}
			try {
				conn.close();
			} catch (SQLException e) {
			}
		

	}

	
}
